#!/bin/bash

PROGNAME=$(basename $0)

function script_echo()
{
    local first

    if [ "${1:0:1}" = "-" ]; then
        first="$1"
        shift
        echo "$first" "$PROGNAME: $@"
    else
        echo "$PROGNAME: $@"
    fi
}

function execute()
{
    if [ "$PRINT_ONLY" -eq 1 ]; then
        script_echo "will execute: $@"
        return 1
    else
        eval "$@"
    fi
}

function make_dirname()
{
    local dir_name=$(cd -P "$(dirname $0)/$1" && pwd)

    if [ "$REL_TO_HOME" -eq 1 ]; then
        echo "$dir_name" | sed "s_^$HOME/__"
    else
        echo "$dir_name"
    fi
}

function create_dir()
{
    if [ ! -d "$1" ]; then
        execute mkdir -p "$1" && script_echo "created directory $1"
    else
        script_echo "directory $1 exists; skipped"
    fi
}

function create_link()
{
    [ -z "$TARGET_DIR" ] && script_echo "\$TARGET_DIR is null!" && return 1
    [ -z "$NAME" ] && script_echo "\$NAME is null!" && return 1
    [ -z "$i" ] && script_echo "\$i is null!" && return 1

    if [ ! -f "$TARGET_DIR/$NAME" ]; then
        execute ln -s "${PREFIX}$i" "$TARGET_DIR" && script_echo "created symbolic link: $TARGET_DIR/$NAME"
    elif [ "$REMOVE" -eq 1 ]; then
        if [ -h "$TARGET_DIR/$NAME" ]; then
            # If it's soft link, there's no harm in removing it
            RM_FLAG=-f
        else
            RM_FLAG=-i
        fi
        execute rm "$RM_FLAG" "$TARGET_DIR/$NAME" && execute ln -s "${PREFIX}$i" "$TARGET_DIR" && \
        script_echo "created symbolic link: $TARGET_DIR/$NAME"
    else
        # Skip creating links if file aleady exists
        script_echo "$TARGET_DIR/$NAME exists; skipped"
    fi
}

BACKUP=0
REMOVE=0
PRINT_ONLY=0
REL_TO_HOME=0

USAGE="\
Usage: $PROGNAME [-nrhb]
-n          do not execute any command; print it instead
-r          remove any existing files; removals are interactive
-h          create soft links with target path relative to \$HOME
-b          backup if file already exists (applicable only to rc files)

-r and -b are mutually exclusive"

if ! which getopt &>/dev/null; then
    script_echo "this script needs GNU getopt"
    exit 1
fi

OPTS="$(getopt -o "brnh" -l 'help' -n "$PROGNAME" -- "$@")" || exit
set -- $OPTS

until [ -z "$*" ]; do
    case "$1" in
        -b)
        if [ "$REMOVE" -ne 1 ]; then
            BACKUP=1
        else
            script_echo "option -b can't be used with -r"
            exit 1
        fi
        ;;

        -r)
        if [ "$BACKUP" -ne 1 ]; then
            REMOVE=1
        else
            script_echo "option -r can't be used with -b"
            exit 1
        fi
        ;;

        -n)
        PRINT_ONLY=1
        ;;

        -h)
        REL_TO_HOME=1
        ;;

        --help)
        echo "$USAGE"
        exit
        ;;

        --)
        shift
        break
        ;;
    esac

    shift
done

if [ -n "$*" ]; then
    script_echo "no arguments accepted"
    exit 1
fi

# We need to find relative path of RC_DIR w.r.t the $HOME directory
RC_DIR=$(make_dirname ../rc)
BIN_DIR=$(make_dirname ../scripts)
VIM_DIR=$(make_dirname ../vim)

cd "$HOME"

# Create symbolic links for all rc files
TARGET_DIR="$HOME"
for i in $(find "$RC_DIR" -name .svn -prune -o -name '.*' -type f -print); do
    NAME=$(basename $i)

    if [ "$BACKUP" -eq 1 ]; then
        # Rename the existing file
        execute mv $NAME{,.old}
    fi

    create_link
done

# Create symbolic links for scripts. There's no point in backing up these since
# backed up files end up in $PATH
echo
TARGET_DIR="$HOME/bin"
create_dir "$TARGET_DIR"
if [ "$REL_TO_HOME" -eq 1 ]; then
    PREFIX=../
else
    PREFIX=
fi
for i in $(find "$BIN_DIR" -name .svn -prune -o -type f -print); do
    NAME=$(basename $i)
    create_link
done

# A softlink for gvimproj to vimproj
execute cp -df "$TARGET_DIR/vimproj" "$TARGET_DIR/gvimproj" && \
script_echo "created symbolic link: $TARGET_DIR/gvimproj"

# Create ~/.vim and put all the custom vimfiles inside. Note that my .vimrc
# contains ~/.vim added to runtime path so that I can get customs by running
# the command :ru jeenu/some.vim
echo
TARGET_DIR="$HOME/.vim/jeenu"
create_dir "$TARGET_DIR"
if [ "$REL_TO_HOME" -eq 1 ]; then
    PREFIX=../../
else
    PREFIX=
fi
for i in $(find "$VIM_DIR" -name .svn -prune -o -type f -print); do
    NAME=$(basename $i)
    create_link
done

echo
create_dir "$HOME/tmp"
create_dir "$HOME/vimproj"
