#!/bin/bash

function script_echo()
{
    echo "$PROGNAME: $@"
}

function buildfiles()
{
    local taglist="${LIST[$1]}"
    local tagdirs="${DIRS[$1]}"
    local findexpr="${FINDEXPR[$1]}"

    if [ -f "$taglist" ]; then
        if confirm "delete and remake $taglist"; then
            rm "$taglist"
            script_echo "building list of files"
            find $tagdirs -name .svn -prune -o $findexpr -print > "$taglist"
        fi
    else
        script_echo "building list of files"
        find $tagdirs -name .svn -prune -o $findexpr -print > "$taglist"
    fi
}

PROGNAME=$(basename $0)
THISDIR=$( (cd $(dirname $0) && pwd) )

LIST=files.ctags.list
CSCOPELIST=files.cscope.list

cd "$THISDIR"

[ -f initrc ] && source initrc

if [ "${PROJECT_ROOT:0:1}" != "/" ]; then
    script_echo "\$PROJECT_ROOT is not absolute"
    exit 1
elif [ -z "$PROJECT_ROOT" ] || [ ! -d "$PROJECT_ROOT" ]; then
    script_echo "PROJECT_ROOT '$PROJECT_ROOT' is not accessible"
    exit 1
else
    script_echo "using \$PROJECT_ROOT as $PROJECT_ROOT"
fi

# Define tag data
NAME[0]="main"
FILENAME[0]="${NAME[0]}.tag"
LIST[0]="${NAME[0]}.list"
FINDEXPR[0]="( -iname *.cpp -o -iname *.h -o -iname *.inl -o -iname *.s -o -iname *.cia -o -iname *.inc )"
DIRS[0]="$PROJECT_ROOT/sf/os/boardsupport/arm
         $PROJECT_ROOT/sf/os/kernelhwsrv/kernel/eka
         $PROJECT_ROOT/sf/os/kernelhwsrv/userlibandfileserver/fileserver
         $PROJECT_ROOT/sf/os/kernelhwsrv/halservices"

NAME[1]="test"
FILENAME[1]="${NAME[1]}.tag"
LIST[1]="${NAME[1]}.list"
FINDEXPR[1]="${FINDEXPR[0]}"
DIRS[1]="$PROJECT_ROOT/sf/os/kernelhwsrv/kerneltest/e32test
         $PROJECT_ROOT/sf/os/kernelhwsrv/kerneltest/f32test"

for index in "${!NAME[@]}"; do
    if confirm "build tag '${NAME[$index]}'"; then
        buildfiles "$index"

        # Delete the tag file if already existing
        [ -f "${FILENAME[$index]}" ] && rm "${FILENAME[$index]}"

        script_echo "building tag '${NAME[$index]}'"
        if ctags -L "${LIST[$index]}" \
            -o "${FILENAME[$index]}" \
            --langmap=c++:+.inl,c++:+.cia,asm:+.inc \
            --extra=+f \
            --extra=+q \
            -I __FALCON__ \
            -I NONSHARABLE_CLASS=class\
            -I EXPORT_C \
            -I IMPORT_C; then
            script_echo "finished building tag '${NAME[$index]}'"
        else
            script_echo "error building tag '${NAME[$index]}'"
        fi
    fi
done

## CSCOPE setup

NAME[2]="main"
FILENAME[2]="${NAME[2]}.cscope"
LIST[2]="${NAME[2]}.list"
FINDEXPR[2]="${FINDEXPR[0]}"
DIRS[2]="${DIRS[0]}"

if confirm "build cscope"; then
    buildfiles 2

    if mlcscope -b -q -k -i "${LIST[2]}" -f "${FILENAME[2]}"; then
        script_echo "cscope db built"
    else
        script_echo "error building cs db"
    fi
fi
