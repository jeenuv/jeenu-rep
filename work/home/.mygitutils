#!/bin/bash

# To list all git modified items in the given directory
function gitmodified()
{
    git rev-parse || return 1
    git diff --diff-filter=M --name-only "$@"
}

# Recursively show diffs for all the modified files
function gitshowdiffs()
{
    (
    git_patch_file="$HOME/tmp/gitpatchfile"
    wd_now="$PWD"

    git_dir="$(git rev-parse --git-dir)" || return 1
    cd "$git_dir/.."
    for i in $(gitmodified "$@"); do
        # prompt for continue
        if ! confirm "$i: continue" 1; then
            if [ "$CONFIRMED" = "no" ]; then
                echo
                continue
            elif [ "$CONFIRMED" = "quit" ]; then
                echo
                return
            fi
        fi

        # With control character to clear the entire line
        echo -e "\r\e[2Kgetting diff..."
        git diff --no-prefix --no-ext-diff "$i" > "$git_patch_file" || return

        if [ "$(stat -c %s "$git_patch_file")" -eq 0 ]; then
            echo "gitshowdiffs: $i: no diff found"
            continue
        else
            DISPLAY= vim -n '+set patchexpr=MyPatch()' \
                   "+leftabove vertical diffpatch $git_patch_file |cmap q qa|nmap <F7> ]c|nmap <F6> [c|windo set fdm=diff nolist|normal gg" \
            "$i"
        fi
    done
    )
}

# Open gitk window without stgit-managed branches
function gitk()
{
    local script_file="$HOME/tmp/filter-stgit-branches.sh"
    [ ! -x "$script_file" ] && cat <<-EOF >"$script_file"  && chmod +x "$script_file"
	#!/bin/bash
	git show-ref --heads | awk -F/ '!/\.stgit/{print \$NF}'
	EOF
    # Dummy rev-parse invocation to make sure we're in a git repository
    git rev-parse && command gitk --argscmd="$script_file" &>/dev/null
}
