
if $PROJECT_LOC == ""
    echohl Error | echo "$PROJECT_LOC is not set!" | echohl None
    finish
endif

" Directory where this file lies
let s:this_dir =  $PROJECT_LOC

" Root directory for project files
let s:root_dir = $PROJECT_ROOT

let &tags = $PROJECT_TAGS

" Only look for .h files with gf and friends
set suffixesadd=.h

set nowrap
set shiftwidth=4
set tabstop=4
set softtabstop=4
set nolist
set expandtab

" Indent statements after case, w.r.t case, even if there's a brace
set cino=l1
autocmd BufNew,BufEnter *.[chS] set textwidth=80

if filereadable($HOME . "/.vim/syntax/arm_asm.vim")
    au BufNewFile,BufRead *.S,*.ins set ft=arm_asm
endif

" We've lot of multiple tag definitions
nmap g<C-]> :tj <C-R><C-W><CR>

vmap <C-]>  y:<C-U>tj <C-R>"<CR>
vmap g<C-]> y:<C-U>tj <C-R>"<CR>
vmap <C-W><C-]> y:<C-U>stj <C-R>"<CR>

" Add cscope database connection
if filereadable(s:this_dir . "/main.cscope")
    exe "cscope add " . s:this_dir . "/main.cscope"
    set nocst           " Don't search the cs db, but use ctags, on CTRL-]
    set csto=0          " If at all a :cstag is performed, use the cs db rather than the tag
    set csqf=c-,t-,e-   " Use quickfix window for caller and assignment search
endif

command -complete=tag    -narg=1  T   tab  stj  <args>
command -complete=tag    -nargs=1 VT  vert stj  <args>
command -complete=buffer -nargs=1 VB  vert sb   <args>

" Read in generated vimrc, if any
let s:gen = s:this_dir . "/vimrc.generated"
if filereadable(s:gen)
    exe "source " . s:gen
endif

" We're in the project directory now.
if isdirectory($PROJECT_ROOT . "/.git")
    " Use to do git grep on the project
    let s:grep = "git grep "

    " Convenient aliases for Git commands
    command Blame !git blame %
    command GuiBlame !git gui blame %
    command Log !git log -p %
else
    " Use to do normal grep on the project
    let s:grep = "grep -rnHI "
endif

" Use to do grep on the project
command -nargs=+ -complete=file G lex system(s:grep . <q-args>)<bar>lopen<bar>keepju lfirst
" Same as G, but on a new tab
command -nargs=+ -complete=file TG tabnew<bar>lex system(s:grep . <q-args>)<bar>lopen<bar>keepju lfirst
" Same as G, but on a new vertical split
command -nargs=+ -complete=file VG vsp<bar>lex system(s:grep . <q-args>)<bar>lopen<bar>keepju lfirst

exe "cd " . $PROJECT_ROOT

call GetNPNavigatonChoiceFromUser("l")
