#!/bin/bash

PROGNAME="$(basename "$0")"
if ! which getopt >/dev/null; then
    echo "$PROGNAME: This script requires GNU getopt in \$PATH"
    exit 1
fi

# Use the DISPLAY variable only for gvimproj
if ! echo "$PROGNAME" | grep -q 'gvimproj'; then
    export DISPLAY=
fi

PROJECT_NAME=
EXE_NAME="$(basename "$0")"
EXE_NAME="${EXE_NAME%proj}"

if ! which &>/dev/null "$EXE_NAME"; then
    echo "command '$EXE_NAME' not found in PATH"
    exit 1
fi

COMMAND="$EXE_NAME -n"
ARGS="$(getopt -o "t:" -q -- "$@")"
if [ "$?" -ne 0 -a "$?" -ne 1 ]; then
    exit 1
fi

eval set -- "$ARGS"

until [ -z "$*" ]; do
    case "$1" in
        -t)
        shift
        tagname="$1"
        ;;

        --)
        shift
        break
        ;;
    esac

    shift
done

if [ -z "$1" -o ! -d "$HOME/vimproj/$1" ]; then
    # All directory in the $HOME/vimproj directory
    PROJECTS="$( (cd "$HOME/vimproj" && find -maxdepth 1 -type d -printf "%f " | sed 's/\.//') )"
elif [ -d "$HOME/vimproj/$1" ]; then
    PROJECT_NAME="$1"
    shift
fi

if [ -z "$PROJECT_NAME" ]; then
    # The arugment that user provided is either not valid or empty

    echo "Select one from below:"
    select PROJECT_NAME in $(eval echo "$PROJECTS"); do
        [ -n "$PROJECT_NAME" ] && break
    done

    # Unset $1
    shift
fi

PROJECT_LOC="$HOME/vimproj/$PROJECT_NAME"

# if there's vimrc file
if [ -f "$PROJECT_LOC/vimrc" ]; then
    COMMAND="$COMMAND -S $PROJECT_LOC/vimrc"
fi

# Create a viminfo anyway
COMMAND="$COMMAND -i $PROJECT_LOC/viminfo"

# This would export what ever data required by project!
[ -f "$PROJECT_LOC/initrc" ] && source $PROJECT_LOC/initrc

# Check if tags exist
PROJECT_TAGS=
PROJECT_LISTS=
for tag in $(echo "$tagname" | sed 's/,/ /g'); do
    if [ -f "$PROJECT_LOC/$tag.tag" ]; then
        PROJECT_TAGS="${PROJECT_TAGS}${PROJECT_LOC}/${tag}.tag,"
        PROJECT_LISTS="${PROJECT_LISTS}${PROJECT_LOC}/${tag}.list"
    else
        if ! confirm "$tag.tag doesn't exist in $PROJECT_NAME. Continue"; then
            exit 1
        fi
    fi
done

# Add main.tag by default
if ! echo "$PROJECT_TAGS" | grep -q "main.tag"; then
    if [ -f "$PROJECT_LOC/main.tag" ]; then
        PROJECT_TAGS="$PROJECT_LOC/main.tag,${PROJECT_TAGS}"
        PROJECT_LISTS="$PROJECT_LOC/main.list ${PROJECT_LISTS}"
    else
        if ! confirm "main.tag doesn't exist in $PROJECT_NAME. Continue"; then
            exit 1
        fi
    fi
fi

# List project tags separated by space
export PROJECT_LISTS
export PROJECT_TAGS
export PROJECT_LOC

exec $COMMAND "$@"
